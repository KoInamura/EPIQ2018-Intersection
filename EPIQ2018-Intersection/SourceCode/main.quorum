use Libraries.Game.Game
use Libraries.Game.Graphics.Camera
use Libraries.Game.Graphics.Model
use Libraries.Game.Graphics.Color
use Libraries.Compute.Vector3
use Libraries.Game.Graphics.AmbientLight
use Libraries.Game.Graphics.PointLight
use Libraries.Game.Graphics.DirectionalLight
use Libraries.Game.Audio3D
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Camera
use Libraries.Game.Layer2D
use Libraries.Game.Graphics.PerspectiveCamera
use Libraries.Interface.Events.KeyboardListener
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Compute.Random

class Main is Game, KeyboardListener
    PerspectiveCamera camera = undefined

    Model ground

    DirectionalModel diver 

    Model box1
    Model box2
    Model box3
    Model box4
    Model box5
    Model box6
    Model box7
    Model box8

    Audio3D soundCar1
    Audio3D soundCar2
    Audio3D soundCar3
    Audio3D soundCar4
    Audio3D soundCar5
    Audio3D soundCar6
    Audio3D soundCar7    
    Audio3D soundCar8

    Drawable grass
    Drawable background

    Color color
    Random ran
    

    // The speed of the character when he moves
    number speed = 10
    
    //speed of yaw and pitch actions
    number yawSpeed = 0
    number pitchSpeed = 0
    number rollSpeed = 0

    //zoom objects 
    number zoomSpeed = 0
    number zoom = 1.0 
    
    number carSpeed = 50

    // These are the values that we will use to move the character
    number velocityX = 0
    number velocityY= 0
    number velocityZ = 0

    //try to get camera to move
    number camvelX = 0
    number camvelY = 0
    number camvelZ = 0

    //YawPitchRoll variables
    number yaw = 0
    number pitch = 0
    number roll = 0

    //speed of camera
    number camSpeed = 100

boolean endHandled = false
   
    action Main
        StartGame()
    end

   
    action CreateGame

        soundCar1:SetDefaultMaximumVolumeDistance(500)
        soundCar1:SetDefaultRolloffRate(0.001)

        AmbientLight ambient
        ambient:SetColor(1, 1, 1, 1)
        SetAmbientLight(ambient)

        DirectionalLight light
        light:SetColor(0, 0.3, 0.4, 1)
        light:SetDirection(0.2, -0.8, 0.8)
        Add(light)

        PointLight pointLight

        camera = cast(PerspectiveCamera,GetCamera3D())
        camera:SetPosition(0, 40, -550)
        camera:LookAt(0, 2, 0) 
        camera:SetUp(0,1,0)

        grass:Load("/Texture/GrassField1.jpg")
        ground:LoadBox(1000.0, 2, 1000, grass)
        Add(ground)
        
        diver:Load("Models/man.g3db") // load the g3db model
        diver:Scale(0.02, 0.02, 0.02)
        diver:SetPosition(8, 4, -500)
        diver:Rotate(0, 1, 0, 90)
        Add(diver)
        
        // Placing the light in the diver
        pointLight:SetColor(1, 1, 1, 1)
        pointLight:SetPosition(0, 3, 0)
        pointLight:SetIntensity(20)
        diver:Add(pointLight)
        
        Model roadNS
        roadNS:LoadBox(100, 3, 1000, color:Gray())
        Add(roadNS)

        Model roadEW
        roadEW:LoadBox(1000, 3, 100, color:Gray())
        Add(roadEW)

        Model cLineNSS
        SetLine(cLineNSS, 3, 4, 400, 0, 0, -300, color:Yellow())
        Model cLineNSN
        SetLine(cLineNSN, 3, 4, 400, 0, 0, 300, color:Yellow())
        Model cLineEWW
        SetLine(cLineEWW, 400, 4, 3, -300, 0, 0, color:Yellow())
        Model cLineEWE
        SetLine(cLineEWE, 400, 4, 3, 300, 0, 0, color:Yellow())

        Model sidewalkSW1
        SetLine(sidewalkSW1, 10, 4, 450, -55, 0, -275, color:LightGray())
        Model sidewalkSE1
        SetLine(sidewalkSE1, 10, 4, 450, 55, 0, -275, color:LightGray())
        Model sidewalkNW1
        SetLine(sidewalkNW1, 10, 4, 450, -55, 0, 275, color:LightGray())
        Model sidewalkNE1
        SetLine(sidewalkNE1, 10, 4, 450, 55, 0, 275, color:LightGray())

        Model sidewalkSW2
        SetLine(sidewalkSW2, 450, 4, 10, -275, 0, -55, color:LightGray())
        Model sidewalkSE2
        SetLine(sidewalkSE2, 450, 4, 10, 275, 0, -55, color:LightGray())
        Model sidewalkNW2
        SetLine(sidewalkNW2, 450, 4, 10, -275, 0, 55, color:LightGray())
        Model sidewalkNE2
        SetLine(sidewalkNE2, 450, 4, 10, 275, 0, 55, color:LightGray())

        Model cwS1
        SetLine(cwS1, 100, 4, 3, 0, 0, -99, color:White())
        Model cwS2
        SetLine(cwS2, 100, 4, 3, 0, 0, -51, color:White())
        Model cwN1
        SetLine(cwN1, 100, 4, 3, 0, 0, 51, color:White())
        Model cwN2
        SetLine(cwN2, 100, 4, 3, 0, 0, 99, color:White())

        Model cwW1
        SetLine(cwW1, 3, 4, 100, -99, 0, 0, color:White())
        Model cwW2
        SetLine(cwW2, 3, 4, 100, -51, 0, 0, color:White())
        Model cwE1
        SetLine(cwE1, 3, 4, 100, 51, 0, 0, color:White())
        Model cwE2
        SetLine(cwE2, 3, 4, 100, 99, 0, 0, color:White())

        box1:LoadBox(10, 10, 15, color:Blue())
        box1:SetPosition(-40, 5, 50)
        Add(box1)

        // Adding audio to the cars
        AddAudioToBox(box1, soundCar1)

        // Add a keyboardListener to move the character
        AddKeyboardListener(me)
    end

    action Update(number seconds)

     // Moves the character every update depending on the values of the 3 fields
        diver:Move(velocityX*seconds, velocityY*seconds, velocityZ*seconds)

    //Checking he position of the charcter in relation to the position of the car
    CheckPosition(diver, box1, soundCar1)

    //Moves the camera 
        camera:Move(camvelX*seconds, camvelY*seconds, camvelZ*seconds)

        yaw = yaw + yawSpeed * seconds
        pitch = pitch + pitchSpeed * seconds

        //camera YawPitch
        camera:SetYawPitchRoll(yaw, pitch, roll)

        // Making the sound play according to the position of the diver
        soundCar1:SetListenerPosition(diver:GetPosition())
        soundCar1:SetListenerDirection(diver:GetDirection())

    // Moves the camera according to the character position
    //   camera:SetPosition(diver:GetPosition():GetX()-4,diver:GetPosition():GetY()+3,diver:GetPosition():GetZ())
    //1ST PERSON//     camera:SetPosition(diver:GetPosition():GetX()-5,diver:GetPosition():GetY(),diver:GetPosition():GetZ())   //FIRST PERSON
    //ATTACH TO CHAR// camera:SetPosition(diver:GetPosition():GetX(),diver:GetPosition():GetY()+5,diver:GetPosition():GetZ()-10)  //ATTACH TO CHAR//

    end
    
    action PressedKey(KeyboardEvent e)
        if e:keyCode = e:UP
            MoveForward()
        elseif e:keyCode = e:LEFT
            MoveLeft()
        elseif e:keyCode = e:RIGHT
            MoveRight()
        elseif e:keyCode = e:DOWN
            MoveBack()
        elseif e:keyCode = e:W
            MoveCamForward()
        elseif e:keyCode = e:D
            MoveCamRight()
        elseif e:keyCode = e:A
            MoveCamLeft()
        elseif e:keyCode = e:S
            MoveCamBack()
        elseif e:keyCode = e:Q
            MoveCamUp()
        elseif e:keyCode = e:E
            MoveCamDown()
         elseif e:keyCode = e:NUM_2
            YawUp()
        elseif e:keyCode = e:NUM_1
            YawDown()
        elseif e:keyCode = e:NUM_3
            PitchRight()
        elseif e:keyCode = e:NUM_4
            PitchLeft()
        elseif e:keyCode = e:SPACE
            CamReturn()
        elseif e:keyCode = e:NUM_5
            zoom = zoom + 0.1
            camera:SetZoom(zoom)
        elseif e:keyCode = e:NUM_6
            zoom = zoom - 0.1
            camera:SetZoom(zoom)
        elseif e:keyCode = e:P    
            TurnYawOff()
            
        end
        
        
    end

    action ReleasedKey(KeyboardEvent e)
          if e:keyCode = e:UP
            StopCharacter()
        elseif e:keyCode = e:LEFT
            StopCharacter()
        elseif e:keyCode = e:RIGHT
            StopCharacter()
        elseif e:keyCode = e:DOWN
            StopCharacter()
        elseif e:keyCode = e:W
            StopCam()
        elseif e:keyCode = e:D
            StopCam()
        elseif e:keyCode = e:A
            StopCam()
        elseif e:keyCode = e:S
            StopCam()
        elseif e:keyCode = e:Q
            StopCam()
        elseif e:keyCode = e:E
            StopCam()
        elseif e:keyCode = e:NUM_1
            StopYaw()
        elseif e:keyCode = e:NUM_2
            StopYaw()
        elseif e:keyCode = e:NUM_3
            StopPitch()
        elseif e:keyCode = e:NUM_4
            StopPitch()
        end
    end

// *******  Encapsulated actions *****************

    action MoveForward() 
        velocityX = 0
        velocityY = 0
        velocityZ = speed
    end

    action StopCharacter()
        velocityX = 0      
        velocityY = 0
        velocityZ = 0
    end

    action MoveLeft
        velocityX = -speed
        velocityY = 0
        velocityZ = 0 
    end 

    action MoveRight
        velocityX = speed
        velocityY = 0
        velocityZ = 0 
    end 

    action MoveBack
        velocityX = 0
        velocityY = 0
        velocityZ = -speed 
    end

////////////Camera actions 

    action MoveCamUp()
        camvelX = 0
        camvelY = camSpeed
        camvelZ = 0
    end

    action MoveCamDown()
        camvelX = 0
        camvelY = -camSpeed
        camvelZ = 0
    end

    action MoveCamForward() 
        camvelX = 0
        camvelY = 0
        camvelZ = camSpeed
    end

    action StopCam()
        camvelX = 0      
        camvelY = 0
        camvelZ = 0
    end

    action MoveCamLeft
        camvelX = -camSpeed
        camvelY = 0
        camvelZ = 0 
    end 

    action MoveCamRight
        camvelX = camSpeed
        camvelY = 0
        camvelZ = 0 
    end 

    action MoveCamBack
        camvelX = 0
        camvelY = 0
        camvelZ = -camSpeed 
    end

    action YawUp
        yawSpeed = camSpeed
        pitchSpeed = 0
        rollSpeed = 0        
    end

    action YawDown
        yawSpeed = -camSpeed
        pitchSpeed = 0
        rollSpeed = 0
    end

    action StopYaw
        yawSpeed = 0
        pitchSpeed = 0
        rollSpeed = 0
    end

    action PitchRight
        yawSpeed = 0
        pitchSpeed = camSpeed
        rollSpeed = 0
    end

    action PitchLeft
        yawSpeed = 0
        pitchSpeed = -camSpeed
        rollSpeed = 0
    end

    action StopPitch
        yawSpeed = 0
        pitchSpeed = 0
        rollSpeed = 0
    end

    action CamReturn
        camera:SetPosition(0, 65, -215)   
        yaw = 0
        pitch = 0
        roll = 0
        zoom = 1.0
        camera:SetZoom(zoom)     //not resetting zoom to 0 
    end

    action TurnYawOff
        yaw = 0
        pitch = 0
        roll = 0
    end 


/////////////

    // Creating cation for drawing center lnes
    action SetLine(Model object, number width, number height, number depth, number positionX, number positionY, number positionZ, Color color)       
        object:LoadBox(width, height, depth, color)
        object:SetPosition(positionX, positionY, positionZ)
        Add(object)
    end

    action AddAudioToBox(Model box, Audio3D sound)
        sound:LoadToStream("Sound/carSound.wav")
        sound:SetVolume(1)
        sound:Play()
        sound:EnableLooping()
        sound:SetMaximumVolumeDistance(2500)
        sound:SetRolloffRate(0.00001)
        box:Add(sound)
    end

    /* An action used to check if the character is near a box */
    action CheckPosition(Model modelCharac, Model model, Audio3D sound)
        sound:SetListenerPosition(modelCharac:GetPosition())
        sound:SetListenerDirection(camera:GetDirection())
            if modelCharac:GetPosition():GetX() < model:GetX() + 5 and modelCharac:GetPosition():GetX() > model:GetX() - 5
            and modelCharac:GetPosition():GetZ() < model:GetZ() + 5 and modelCharac:GetPosition():GetZ() > model:GetZ() - 5
                /* if the character is near a box we play the sound car */
                sound:Stream()
            else 

            end  
    end

    action LoadBoxCar(Model object, number width, number height, number depth, Color color, number positionX, number positionY, number positionZ)
        object:LoadBox(width, height, depth, color:Blue())
        object:SetPosition(-positionX, positionY, positionY)
        Add(object)
    end

end
